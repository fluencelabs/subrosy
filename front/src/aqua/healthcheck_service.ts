/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.7.7-358
 *
 */
import { FluencePeer } from '@fluencelabs/fluence';
import type { CallParams } from '@fluencelabs/fluence/dist/internal/compilerSupport/v3';
import { callFunction, registerService } from '@fluencelabs/fluence/dist/internal/compilerSupport/v3';

// Services

export interface HealthCheckStorageDef {
    get_all_last: (
        callParams: CallParams<null>,
    ) =>
        | { last_update: number; peer_id: string; service_id: string; status: string }[]
        | Promise<{ last_update: number; peer_id: string; service_id: string; status: string }[]>;
    get_status: (
        service_id: string,
        callParams: CallParams<'service_id'>,
    ) =>
        | { last_update: number; peer_id: string; service_id: string; status: string }[]
        | Promise<{ last_update: number; peer_id: string; service_id: string; status: string }[]>;
    store: (
        status: { last_update: number; peer_id: string; service_id: string; status: string },
        callParams: CallParams<'status'>,
    ) => void | Promise<void>;
    store_status: (
        status: string,
        host: string,
        service_id: string,
        timestamp: number,
        callParams: CallParams<'status' | 'host' | 'service_id' | 'timestamp'>,
    ) => void | Promise<void>;
}
export function registerHealthCheckStorage(serviceId: string, service: HealthCheckStorageDef): void;
export function registerHealthCheckStorage(peer: FluencePeer, serviceId: string, service: HealthCheckStorageDef): void;

export function registerHealthCheckStorage(...args: any) {
    registerService(args, {
        functions: {
            tag: 'labeledProduct',
            fields: {
                get_all_last: {
                    tag: 'arrow',
                    domain: {
                        tag: 'nil',
                    },
                    codomain: {
                        tag: 'unlabeledProduct',
                        items: [
                            {
                                tag: 'array',
                                type: {
                                    tag: 'struct',
                                    name: 'HealthStatus',
                                    fields: {
                                        last_update: {
                                            tag: 'scalar',
                                            name: 'u64',
                                        },
                                        peer_id: {
                                            tag: 'scalar',
                                            name: 'string',
                                        },
                                        service_id: {
                                            tag: 'scalar',
                                            name: 'string',
                                        },
                                        status: {
                                            tag: 'scalar',
                                            name: 'string',
                                        },
                                    },
                                },
                            },
                        ],
                    },
                },
                get_status: {
                    tag: 'arrow',
                    domain: {
                        tag: 'labeledProduct',
                        fields: {
                            service_id: {
                                tag: 'scalar',
                                name: 'string',
                            },
                        },
                    },
                    codomain: {
                        tag: 'unlabeledProduct',
                        items: [
                            {
                                tag: 'array',
                                type: {
                                    tag: 'struct',
                                    name: 'HealthStatus',
                                    fields: {
                                        last_update: {
                                            tag: 'scalar',
                                            name: 'u64',
                                        },
                                        peer_id: {
                                            tag: 'scalar',
                                            name: 'string',
                                        },
                                        service_id: {
                                            tag: 'scalar',
                                            name: 'string',
                                        },
                                        status: {
                                            tag: 'scalar',
                                            name: 'string',
                                        },
                                    },
                                },
                            },
                        ],
                    },
                },
                store: {
                    tag: 'arrow',
                    domain: {
                        tag: 'labeledProduct',
                        fields: {
                            status: {
                                tag: 'struct',
                                name: 'HealthStatus',
                                fields: {
                                    last_update: {
                                        tag: 'scalar',
                                        name: 'u64',
                                    },
                                    peer_id: {
                                        tag: 'scalar',
                                        name: 'string',
                                    },
                                    service_id: {
                                        tag: 'scalar',
                                        name: 'string',
                                    },
                                    status: {
                                        tag: 'scalar',
                                        name: 'string',
                                    },
                                },
                            },
                        },
                    },
                    codomain: {
                        tag: 'nil',
                    },
                },
                store_status: {
                    tag: 'arrow',
                    domain: {
                        tag: 'labeledProduct',
                        fields: {
                            status: {
                                tag: 'scalar',
                                name: 'string',
                            },
                            host: {
                                tag: 'scalar',
                                name: 'string',
                            },
                            service_id: {
                                tag: 'scalar',
                                name: 'string',
                            },
                            timestamp: {
                                tag: 'scalar',
                                name: 'u64',
                            },
                        },
                    },
                    codomain: {
                        tag: 'nil',
                    },
                },
            },
        },
    });
}

// Functions
