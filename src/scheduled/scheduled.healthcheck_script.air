; This file is auto-generated. Do not edit manually: changes may be erased.
; Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
; If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
; Aqua version: 0.7.7-353

(seq
 (call %init_peer_id% ("getDataSrv" "key") [] key)
 (new $storages
  (new $error
   (new $statuses
    (new $participants
     (seq
      (seq
       (seq
        (seq
         (seq
          (seq
           (seq
            (seq
             (seq
              (seq
               (seq
                (seq
                 (seq
                  (seq
                   (seq
                    (seq
                     (new $records
                      (new $successful
                       (new $result
                        (seq
                         (seq
                          (seq
                           (seq
                            (seq
                             (call %init_peer_id% ("op" "string_to_b58") [key] k)
                             (call %init_peer_id% ("kad" "neighborhood") [k [] []] nodes)
                            )
                            (par
                             (fold nodes n-0
                              (par
                               (seq
                                (xor
                                 (seq
                                  (seq
                                   (call n-0 ("peer" "timestamp_sec") [] t)
                                   (call n-0 ("registry" "get_records") [key t] get_result)
                                  )
                                  (xor
                                   (match get_result.$.success! true
                                    (seq
                                     (ap get_result.$.result! $records)
                                     (ap true $successful)
                                    )
                                   )
                                   (ap get_result.$.error! $error-1)
                                  )
                                 )
                                 (call n-0 ("op" "noop") [])
                                )
                                (call %init_peer_id% ("op" "noop") [])
                               )
                               (next n-0)
                              )
                              (never)
                             )
                             (null)
                            )
                           )
                           (new $status
                            (new $result-0
                             (seq
                              (seq
                               (seq
                                (par
                                 (seq
                                  (seq
                                   (call %init_peer_id% ("math" "sub") [5 1] sub)
                                   (new $successful_test
                                    (seq
                                     (fold $successful s
                                      (seq
                                       (seq
                                        (seq
                                         (call %init_peer_id% ("math" "add") [sub 1] incr_idx)
                                         (ap s $successful_test)
                                        )
                                        (canon %init_peer_id% $successful_test  #successful_iter_canon)
                                       )
                                       (xor
                                        (match #successful_iter_canon.length incr_idx
                                         (null)
                                        )
                                        (next s)
                                       )
                                      )
                                      (never)
                                     )
                                     (canon %init_peer_id% $successful_test  #successful_result_canon)
                                    )
                                   )
                                  )
                                  (ap "ok" $status)
                                 )
                                 (call %init_peer_id% ("peer" "timeout") [6000 "timeout"] $status)
                                )
                                (new $status_test
                                 (seq
                                  (fold $status s
                                   (seq
                                    (seq
                                     (seq
                                      (call %init_peer_id% ("math" "add") [0 1] incr_idx)
                                      (ap s $status_test)
                                     )
                                     (canon %init_peer_id% $status_test  #status_iter_canon)
                                    )
                                    (xor
                                     (match #status_iter_canon.length incr_idx
                                      (null)
                                     )
                                     (next s)
                                    )
                                   )
                                   (never)
                                  )
                                  (canon %init_peer_id% $status_test  #status_result_canon)
                                 )
                                )
                               )
                               (xor
                                (match #status_result_canon.$.[0]! "ok"
                                 (ap true $result-0)
                                )
                                (ap false $result-0)
                               )
                              )
                              (canon %init_peer_id% $result-0  #result-fix-0)
                             )
                            )
                           )
                          )
                          (xor
                           (match #result-fix-0.$.[0]! false
                            (ap "timeout exceeded" $error-1)
                           )
                           (seq
                            (seq
                             (canon %init_peer_id% $records  #records_canon)
                             (call %init_peer_id% ("registry" "merge") [#records_canon] merged)
                            )
                            (xor
                             (match merged.$.success! false
                              (ap merged.$.error! $error-1)
                             )
                             (ap merged.$.result! $result)
                            )
                           )
                          )
                         )
                         (canon %init_peer_id% $result  #result-fix)
                        )
                       )
                      )
                     )
                     (canon %init_peer_id% $error-1  #push-to-stream-17)
                    )
                    (ap #push-to-stream-17 $error-0)
                   )
                   (canon %init_peer_id% $error-0  #push-to-stream-15)
                  )
                  (ap #push-to-stream-15 $error)
                 )
                 (ap #result-fix.$.[0]! result-fix_flatten)
                )
                (fold result-fix_flatten r-0-0
                 (seq
                  (xor
                   (match r-0-0.$.metadata.key_id! "role=participant"
                    (ap r-0-0 $result-1)
                   )
                   (call %init_peer_id% ("op" "noop") [])
                  )
                  (next r-0-0)
                 )
                )
               )
               (canon %init_peer_id% $result-1  #push-to-stream-90)
              )
              (ap #push-to-stream-90 $participants)
             )
             (canon %init_peer_id% $participants  #participants_canon)
            )
            (fold #participants_canon p-0
             (seq
              (call p-0.$.metadata.peer_id! (p-0.$.metadata.service_id.[0]! "check") [] $statuses)
              (next p-0)
             )
            )
           )
           (ap #result-fix.$.[0]! result-fix_flatten-0)
          )
          (fold result-fix_flatten-0 r-1-0
           (seq
            (xor
             (match r-1-0.$.metadata.key_id! "role=healthcheckstorage"
              (ap r-1-0 $result-2)
             )
             (call %init_peer_id% ("op" "noop") [])
            )
            (next r-1-0)
           )
          )
         )
         (canon %init_peer_id% $result-2  #push-to-stream-106)
        )
        (ap #push-to-stream-106 $find_records)
       )
       (canon %init_peer_id% $find_records  #find_records_canon)
      )
      (fold #find_records_canon s-0
       (seq
        (seq
         (canon %init_peer_id% $statuses  #statuses_canon)
         (fold #statuses_canon r-2
          (seq
           (call %init_peer_id% (s-0.$.metadata.service_id.[0]! "store") [r-2])
           (next r-2)
          )
         )
        )
        (next s-0)
       )
      )
     )
    )
   )
  )
 )
)
